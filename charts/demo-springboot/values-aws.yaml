# aws eks에 배포 용
service:
  type: ClusterIP

image:
  pullPolicy: Always

resources:
  requests:
    cpu: 50m

tolerations:
- key: NodePurpose
  operator: Equal
  value: service
  effect: NoSchedule

affinity: 
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: NodePurpose
          operator: In
          values:
          - service
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        topologyKey: kubernetes.io/hostname
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - demo-springboot-github
          
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

ingress:
  enabled: true
  className: alb
  annotations: 
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "10"
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: deletion_protection.enabled=false
    alb.ingress.kubernetes.io/load-balancer-name: demo-springboot-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/security-groups: sg-06db134efd76cad04
    alb.ingress.kubernetes.io/subnets: subnet-0327e71f059c1d539, subnet-0c14352d491bc1a27
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  hosts:
    - paths:
      - path: /
        pathType: Prefix